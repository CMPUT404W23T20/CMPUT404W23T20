{"version":3,"sources":["Components/Nav.js","utils/utils.js","Components/Home.js","Components/Inbox.js","Components/Profile.js","Components/Friends.js","Components/Posts.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","navigate","useNavigate","itemsList","text","location","icon","_jsx","HomeIcon","InboxIcon","AccountCircleIcon","GroupIcon","DynamicFeedIcon","_jsxs","Drawer","className","variant","anchor","PaperProps","sx","width","background","children","List","map","item","index","ListItem","color","onClick","e","ListItemIcon","ListItemText","primary","Button","localStorage","clear","mt","bottom","alignSelf","getApiUrls","includes","window","hostname","localHost","localPort","port","concat","Posts","_React$useState","React","useState","_React$useState2","_slicedToArray","setPosts","_React$useState3","_React$useState4","followingPosts","setFollowingPosts","_React$useState5","_React$useState6","Comments","setComments","_React$useState7","_React$useState8","_React$useState9","_React$useState10","loadingFollowing","setLoadingFollowing","_React$useState11","_React$useState12","loadingPosts","setLoadingPosts","_React$useState13","_React$useState14","friends","setFriends","_React$useState15","_React$useState16","friend","setFriend","getFriends","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","path","response","wrap","_context","prev","next","getItem","axios","get","headers","sent","data","items","stop","apply","arguments","handleRepost","_ref2","_callee2","post","i","id","j","_context2","source","console","log","length","displayName","abrupt","_x","getFeed","_ref3","_callee3","following","followingList","allFollowingPosts","authG6","fpost","followee","_path","_followingPosts","posts","commentList","commentListPath","comments","commentDataList","_i","_i2","_commentListPath","_comments","_commentDataList","_i3","_context3","btoa","username","split","pop","host","replace","catch","error","undefined","filter","author","push","useEffect","_React$useState17","_React$useState18","commentPosted","setCommentPosted","postComment","_ref4","_callee4","comment","authorId","_postComment","_data","_context4","document","getElementById","value","style","display","setTimeout","_x2","_x3","_x4","userInfo","token","decoded","JSON","stringify","jwt_decode","parse","likeExists","_ref5","_callee5","object","_context5","_x5","likeObject","_ref6","_callee7","existingLike","objectURL","objectLikeExists","objectType","objectOrigin","postLike","inboxPath","_inboxPath","foreignLikeData","_inboxPath2","_context7","type","origin","user_id","toLowerCase","summary","objectLiked","_ref7","_callee6","postLikes","_context6","_x7","_x6","_React$useState19","_React$useState20","openPost","setopenPost","_React$useState21","_React$useState22","setPost","_React$useState23","_React$useState24","openComments","setOpenComments","_React$useState25","_React$useState26","_React$useState27","_React$useState28","repostModal","setRepostModal","Box","flexDirection","height","alignItems","justifyContent","backgroundColor","flex","margin","borderColor","borderStyle","Typography","overflowY","maxHeight","CircularProgress","Card","paddingLeft","marginTop","marginLeft","src","profileImage","alt","borderRadius","title","published","substring","marginRight","marginBottom","contentType","MuiMarkdown","description","image_data","textAlign","fontSize","position","right","startIcon","FavoriteIcon","TextField","label","top","visibility","wordWrap","IconButton","FavoriteBorderIcon","Modal","open","onClose","padding","FormControl","InputLabel","htmlFor","Select","renderValue","selected","join","multiple","MenuProps","onChange","event","target","friendItem","MenuItem","Checkbox","checked","indexOf","Inbox","loading","setLoading","get_inbox_items","responseItems","postResponse","_path2","_response2","url","follower","splice","handleClear","delete","then","setItems","acceptFollow","userId","put","t0","t1","loadingPost","setLoadingPost","handleOpenPost","likes","Profile","getUserInfo","setUserInfo","github","Friends","setFollowing","filteredFollowing","setFilteredFollowing","filteredFriends","setFilteredFriends","notFollowing","setNotFollowing","filteredNotFollowing","setFilteredNotFollowing","otherUsers","setOtherUsers","filteredOtherUsers","setFilteredOtherUsers","loadingFriends","setLoadingFriends","loadingNotFollowing","setLoadingNotFollowing","loadingOtherUsers","setLoadingOtherUsers","getLists","friendsResponse","friendsList","followingResponse","allAuthors","allAuthorsList","notFollowingList","found","_j","_found","_friend","getOtherUsers","getGroup2Users","auth","getGroup6Users","getGroup13Users","otherUsersList","group2Users","group6Users","group13Users","_following","_j2","_found2","followAuthor","_ref8","_callee8","other","userResponse","userData","_context8","unfollowAuthor","_ref9","_callee9","_context9","paddingTop","search","filtered","overflowX","CardContent","href","float","minWidth","getposts","CreatePost","imageData","followersResponse","_iterator","_step","unlisted","markdown","_createForOfIteratorHelper","s","n","done","f","finish","setcreatePost","HandleDelete","handleEditPost","setedit","setImage","createPost","edit","setUnlisted","setVisibility","setMarkdown","_objectSpread","boxShadow","multiline","maxRows","minRows","accept","file","files","reader","FileReader","onload","base64","result","readAsDataURL","FormControlLabel","control","name","Login","invalid","setInvalid","handleLogin","password","status","setItem","zIndex","fontWeight","onKeyPress","key","App","BrowserRouter","Routes","Route","element","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.6e2736c7.chunk.js","sourcesContent":["import {\r\n    Button,\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n  } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport InboxIcon from \"@mui/icons-material/Inbox\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport DynamicFeedIcon from '@mui/icons-material/DynamicFeed';\r\n\r\nfunction Nav(){\r\n    const navigate = useNavigate();\r\n    const itemsList = [\r\n        {\r\n            text: \"Home\",\r\n            location: \"/\",\r\n            icon: <HomeIcon />,\r\n        },\r\n        {\r\n          text: \"Inbox\",\r\n          location: \"/inbox\",\r\n          icon: <InboxIcon />,\r\n        },\r\n        {\r\n            text: \"Profile\",\r\n            location: \"/profile\",\r\n            icon : <AccountCircleIcon />,\r\n        },\r\n        {\r\n            text: \"Friends\",\r\n            location: \"/friends\",\r\n            icon: <GroupIcon />,\r\n        },\r\n        {\r\n            text: \"Posts\",\r\n            location: \"/posts\",\r\n            icon: <DynamicFeedIcon />,\r\n        },\r\n    ]\r\n\r\n    return (\r\n      <Drawer\r\n        className=\"sidebar\"\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n        PaperProps={{\r\n          sx: {\r\n            width: \"170px\",\r\n            background: \"linear-gradient(to bottom, #297fca, #66aeec)\",\r\n          },\r\n        }}\r\n      >\r\n        <List>\r\n          {itemsList.map((item, index) => {\r\n            const { text } = item;\r\n            return (\r\n              <ListItem\r\n                key={text}\r\n                sx={{ color: \"white\" }}\r\n                className=\"sidebar_item\"\r\n                onClick={(e) => navigate(item.location)}\r\n              >\r\n                {item.icon && (\r\n                  <ListItemIcon sx={{ color: \"white\" }}>{item.icon}</ListItemIcon>\r\n                )}\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <Button\r\n          onClick={() => { navigate(\"/Login\"); localStorage.clear(); }}\r\n          variant=\"outlined\"\r\n          sx={{\r\n            color: \"#ffffff\",\r\n            mt: 5,\r\n            bottom: \"20px\",\r\n            alignSelf: \"center\",\r\n            width: \"80%\",\r\n          }}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </Drawer>\r\n    );\r\n  }\r\n  \r\n  export default Nav;","export function getApiUrls() {\r\n  const herokuHostnames = [\"t20-social-distribution.herokuapp.com\", \"www.t20-social-distribution.herokuapp.com\"];\r\n\r\n  if (herokuHostnames.includes(window.location.hostname)) {\r\n    const herokuUrl = \"https://\" + window.location.hostname;\r\n    return herokuUrl;\r\n  } else {\r\n    const localHost = window.location.hostname;\r\n    const localPort = window.location.port || '8000'; // use the port from the URL if available, or default to 8000  \r\n    if (localPort === '3000') {\r\n      return `https://t20-social-distribution.herokuapp.com`;\r\n    }\r\n    return `http://${localHost}:${localPort}`;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Box, Button, Card, List, ListItem, TextField, Typography, MenuItem, InputLabel, ListItemText } from '@material-ui/core';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport Nav from './Nav';\r\nimport axios from 'axios';\r\nimport { FormControl, Modal, getTextFieldUtilityClass } from '@mui/material';\r\nimport { getApiUrls } from '../utils/utils';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport MuiMarkdown from 'mui-markdown';\r\n\r\nfunction Posts() {\r\n    const [Posts, setPosts] = React.useState([]);\r\n    const [followingPosts, setFollowingPosts] = React.useState([]);\r\n    const [Comments, setComments] = React.useState([]);\r\n    const [publicComments, setPublicComments] = React.useState([]);\r\n    const [loadingFollowing, setLoadingFollowing] = React.useState(false);\r\n    const [loadingPosts, setLoadingPosts] = React.useState(false);\r\n    const [friends, setFriends] = React.useState([]);\r\n    const [friend, setFriend] = React.useState([]);\r\n\r\n    const getFriends = async () => {\r\n        // gets all friends for use in creating posts\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/friends`;\r\n        let response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        let friends = response.data.items;\r\n        setFriends(friends);\r\n    }\r\n\r\n    const handleRepost = async (post) => {\r\n        post.source = `${getApiUrls()}/service/authors/` + localStorage.getItem(\"id\")\r\n        console.log(\"repost\", post)\r\n        console.log(\"sending to\", friend)\r\n        // send to all friend with display name in friend\r\n        for (let i = 0; i < friend.length; i++) {\r\n            // get id of friend in friends with display name = friend[i]\r\n            let id = \"\"\r\n            for (let j = 0; j < friends.length; j++) {\r\n                if (friends[j].displayName == friend[i]) {\r\n                    id = friends[j].id\r\n                    break\r\n                }\r\n            }\r\n            // send post to friend\r\n            let path = `${getApiUrls()}/service/authors/${id}/inbox`;\r\n            let response = await axios.post(path, post, {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                        }\r\n                    });\r\n            console.log(response)\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setFriend(\r\n          // On autofill we get a stringified value.\r\n          typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n      };\r\n\r\n    const getFeed = async () => {\r\n        /* 1.get all our friends put into a list\r\n           2.enter the id of friend's posts then put all visibilty = friends in another list */\r\n\r\n        let following = await axios.get(`${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/following`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        let followingList = following.data.items\r\n        let allFollowingPosts = []\r\n        let username = \"Group20\"\r\n        let password = \"jn8VWYcZDrLrkQDcVsRi\"\r\n        let authG6 = \"Basic \" + btoa(username + \":\" + password);\r\n        for (let fpost = 0; fpost < followingList.length; fpost++) { //for loop to get Following's posts\r\n            let followee = followingList[fpost]\r\n            let id = followee.id.split(\"/\").pop();\r\n            let path = followee.host + \"/service/authors/\" + id + \"/posts\";\r\n            if (followee.host == \"https://social-distribution-media.herokuapp.com/api\") {\r\n                path = followee.host + \"/authors/\" + id + \"/posts\";\r\n            }\r\n            if (followee.host == \"https://group-13-epic-app.herokuapp.com/\") {\r\n                path = followee.host + \"api/authors/\" + id + \"/posts\";\r\n            }\r\n            if (followee.host == \"https://cmput404-group6-instatonne.herokuapp.com\") {\r\n                id = id.replace(/-/g, '');\r\n                path = followee.host + \"/authors/\" + id + \"/posts\";\r\n            }\r\n            if (followee.host == \"https://distributed-social-net.herokuapp.com/\") {\r\n                id = id.replace(/-/g, '');\r\n                path = followee.host + \"service/authors/\" + id + \"/posts\";\r\n            }\r\n            console.log(\"path\",path)\r\n            // for when group 6 has authorization working\r\n            // (followee.host == \"https://cmput404-group6-instatonne.herokuapp.com\") ? \"Basic R3JvdXAyMDpncm91cDIwY21wdXQ0MDQ=\" : \"\"\r\n            let followingPosts = await axios.get(path, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": (followee.host == path) ? \"Bearer \" + localStorage.getItem(\"token\") : (followee.host == \"https://social-distribution-media.herokuapp.com/api\") ? authG6 : (followee.host == \"https://cmput404-group6-instatonne.herokuapp.com\") ? \"Basic R3JvdXAyMDpncm91cDIwY21wdXQ0MDQ=\" : \"\"\r\n                }\r\n            }).catch((error) => {\r\n                console.log(\"error\", error)\r\n            });\r\n            // add all posts to allFollowingPosts if request was successful\r\n            if (followingPosts != undefined) allFollowingPosts = allFollowingPosts.concat(followingPosts.data.items ? followingPosts.data.items : followingPosts.data)\r\n        }\r\n        console.log(\"followingPosts\", allFollowingPosts)\r\n        setFollowingPosts(allFollowingPosts)\r\n        setLoadingFollowing(true)\r\n\r\n        let path = `${getApiUrls()}/service/posts`;\r\n        let response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        let posts = response.data.items;\r\n        // remove posts that are in allFollowingPosts by id\r\n        posts = posts.filter((post) => {\r\n            for (let i = 0; i < allFollowingPosts.length; i++) {\r\n                if (post.id == allFollowingPosts[i].id) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        })\r\n\r\n        console.log(\"posts\", posts)\r\n        setPosts(posts);\r\n        setLoadingPosts(true)\r\n\r\n\r\n        let commentList = []\r\n        let publicComments = []\r\n\r\n        //get all comments in the \"Public Posts\" header\r\n        for (let i = 0; i < posts.length; i++) {\r\n\r\n            let commentListPath = `${getApiUrls()}` + \"/service/authors/\" + posts[i].author.id + \"/posts/\" + posts[i].id + \"/comments\";\r\n            let comments = await axios.get(commentListPath, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n            let commentDataList = comments.data.items\r\n            if (commentDataList == undefined) commentDataList = []\r\n    \r\n        for (let i = 0; i < commentDataList.length; i++) {\r\n                commentList.push(commentDataList[i])\r\n        }\r\n        }\r\n\r\n        for (let i = 0; i < allFollowingPosts.length; i++) {\r\n            //getting comments for LOCAL posts\r\n            if (typeof allFollowingPosts[i].author !== 'undefined') { //running into weird bug at :3000 host w/out this\r\n                if (allFollowingPosts[i].author.host === \"https://t20-social-distribution.herokuapp.com\") {\r\n                    let commentListPath = `${getApiUrls()}` + \"/service/authors/\" + allFollowingPosts[i].author.id + \"/posts/\" + allFollowingPosts[i].id + \"/comments\";\r\n                    let comments = await axios.get(commentListPath, {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                        }\r\n                    });\r\n                    let commentDataList = comments.data.items\r\n                    for (let i = 0; i < commentDataList.length; i++) {\r\n                        commentList.push(commentDataList[i])\r\n                    }\r\n            \r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n        setComments(commentList)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (localStorage.getItem(\"token\") != null) {\r\n            getFeed()\r\n            getFriends()\r\n        }\r\n    }, []);\r\n\r\n    const [commentPosted, setCommentPosted] = React.useState(false);\r\n    const postComment = async (comment, post, authorId) => {\r\n\r\n        let id = post.author.id.split(\"/\").pop()\r\n        let path = `${getApiUrls()}` + \"/service/authors/\" + authorId + \"/posts/\" + post.id + \"/comments\";\r\n\r\n        if (post.author.host == \"https://social-distribution-media.herokuapp.com/api\") {\r\n            path = post.author.id + \"/inbox\"\r\n        }\r\n        if (post.author.host == \"https://group-13-epic-app.herokuapp.com/\") {\r\n            path = post.author.id + \"/inbox/\" //send to inbox\r\n        }\r\n        if (post.author.host == \"https://cmput404-group6-instatonne.herokuapp.com\") { //have not verified this group to check if path is correct\r\n            path = post.author.id + \"/inbox\";\r\n        }\r\n        if (post.author.host == \"https://distributed-social-net.herokuapp.com/\") {\r\n            path = post.author.id + \"/inbox\"\r\n        }\r\n\r\n        if (post.author.host === \"https://t20-social-distribution.herokuapp.com\") { //sending this comment to a local post\r\n            let data = {\r\n                author: localStorage.getItem(\"id\"),\r\n                comment: comment,\r\n                post: post.id\r\n            }\r\n\r\n            //post to comments\r\n            let postComment = await axios.post(path, data, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n\r\n            //post to inbox\r\n            path = `${getApiUrls()}/service/authors/${post.author.id}/inbox`;\r\n            await axios.post(path, postComment.data, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        else { //comment to a foreign node\r\n            let data = {\r\n                \"type\": \"comment\",\r\n                \"author\": \"https://t20-social-distribution.herokuapp.com/service/authors/\" + localStorage.getItem(\"id\"),  //author of this comment\r\n                \"contentType\": \"text/plain\",\r\n                \"comment\": comment, //comment user made\r\n                \"post\": post.id, //author of the post\r\n            }\r\n\r\n            let username = \"Group20\"\r\n            let password = \"jn8VWYcZDrLrkQDcVsRi\"\r\n            let authG6 = \"Basic \" + btoa(username + \":\" + password);\r\n\r\n            await axios.post(path, data, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": (post.author.host == path) ? \"Bearer \" + localStorage.getItem(\"token\") : (post.author.host == \"https://social-distribution-media.herokuapp.com/api\") ? authG6 : (post.author.host == \"https://cmput404-group6-instatonne.herokuapp.com\") ? \"Basic R3JvdXAyMDpncm91cDIwY21wdXQ0MDQ=\" : \"\"\r\n\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n            console.log(data)\r\n\r\n\r\n        }\r\n\r\n\r\n        setCommentPosted(true);\r\n        getFeed()\r\n        //clear the input box after sending comment*/\r\n        document.getElementById(\"comment\").value = \"\"\r\n        document.getElementById(\"postedComment\").style.display = \"Block\"\r\n\r\n        setTimeout(\r\n            function () {\r\n                setCommentPosted(false);\r\n            }, 5000);\r\n    }\r\n    const userInfo = () =>{           \r\n        let token = localStorage.getItem(\"token\")\r\n        if (token === null ){\r\n            console.log(\"Not logged in\");\r\n         \r\n        }\r\n        var decoded = JSON.stringify(jwt_decode(token));\r\n       \r\n        var decode_info= JSON.parse(decoded)\r\n        //console.log(decode_info)\r\n        return decode_info;\r\n        \r\n    };\r\n\r\n    //check if you've already sent a like object \r\n    //avoid duplicates\r\n    const likeExists = async(object) =>{\r\n        let path = `${getApiUrls()}/service/authors/`+localStorage.getItem(\"id\") + \"/liked\";\r\n        let response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"token\")\r\n            }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n             });\r\n        let items = response.data.items\r\n        for (let i = 0; i < items.length; i++){\r\n            if (items[i].object === object){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n        \r\n    }\r\n    const likeObject= async(object) =>{\r\n        /* Make 2 posts requests for a local post\r\n         1) Add to the author's \"liked\" url\r\n         2) Post to inbox (only this for foreign posts)\r\n        */\r\n\r\n       //check if like already exists\r\n        let existingLike = false\r\n        if (object.author.host === \"https://t20-social-distribution.herokuapp.com\"){\r\n            const objectURL = (object.type === \"post\") ? object.origin : object.post.origin +\"/comments/\" + object.id\r\n            existingLike = await(likeExists(objectURL))\r\n        }\r\n        else{ //checking using id of foreign comment/post\r\n            const objectLikeExists = object.id;\r\n            existingLike = await(likeExists(objectLikeExists))\r\n        }\r\n        \r\n        if (existingLike === true){ //person has already liked this\r\n            return //don't got through with the rest of this function\r\n        }\r\n    \r\n        //local to local like \r\n        let author =userInfo()\r\n        let path = `${getApiUrls()}/service/authors/`+author.user_id+ \"/liked\";\r\n        let objectType = (object.type ===\"post\")? \"Post\":\"Comment\"\r\n        let objectOrigin = (objectType === \"Post\") ? object.origin : object.post.origin +\"/comments/\" + object.id\r\n\r\n        if (object.author.host === \"https://t20-social-distribution.herokuapp.com\"){\r\n            let data ={}\r\n            if (object.type.toLowerCase() === \"post\") { //liked post\r\n                 data = { \r\n                    author: localStorage.getItem(\"id\"),\r\n                    post:object.id,\r\n                    summary: `${author.username} likes your ${object.type}`,\r\n                    objectLiked: objectType,\r\n                    object: objectOrigin,             \r\n                }\r\n            }\r\n            else{ //liked comment\r\n                data = { \r\n                    author: localStorage.getItem(\"id\"),\r\n                    comment: object.id,\r\n                    summary: `${author.username} likes your ${object.type}`,\r\n                    objectLiked: objectType,\r\n                    object: objectOrigin,     \r\n                }\r\n            }\r\n            \r\n\r\n            let postLike = await axios.post(path, data, {  //send this to author liked\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \"+localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n    \r\n            let inboxPath = `${getApiUrls()}/service/authors/${object.author.id}/inbox`; //send this to inbox of whoever posted\r\n                    await axios.post(inboxPath, postLike.data, {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Authorization\": \"Bearer \"+localStorage.getItem(\"token\")\r\n                        }\r\n                    }).catch((error) => {\r\n                        console.log(error);\r\n                });\r\n\r\n        }\r\n        else{ //foreign node\r\n\r\n            let inboxPath = object.author.id+\"/inbox\";\r\n            if ( object.author.host == \"https://group-13-epic-app.herokuapp.com/\"){\r\n                inboxPath = object.author.id+\"/inbox/\" //send to inbox\r\n             }\r\n\r\n            let foreignLikeData = {\r\n            author:`${getApiUrls()}/service/authors/`+ localStorage.getItem(\"id\"),\r\n            object: object.id,\r\n            type: \"Like\",\r\n          }\r\n          \r\n          let username = \"Group20\"\r\n          let password = \"jn8VWYcZDrLrkQDcVsRi\"\r\n          let authG6 = \"Basic \" + btoa(username + \":\" + password);\r\n\r\n          await axios.post(inboxPath, foreignLikeData, { //send this to commentor's inbox\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\" : (object.author.host == path) ? \"Bearer \" + localStorage.getItem(\"token\") : (object.author.host == \"https://social-distribution-media.herokuapp.com/api\") ? authG6 : (object.author.host == \"https://cmput404-group6-instatonne.herokuapp.com\") ? \"Basic R3JvdXAyMDpncm91cDIwY21wdXQ0MDQ=\" : \"\"\r\n\r\n            }\r\n            }).catch((error) => {\r\n            console.log(error);\r\n            });\r\n\r\n\r\n            if (object.type.toLowerCase() === \"comment\"){\r\n               \r\n                let inboxPath = `https://t20-social-distribution.herokuapp.com/service/authors/${object.author.id}/inbox`; //send this to inbox of whoever posted\r\n                await axios.post(inboxPath, foreignLikeData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": \"Bearer \"+localStorage.getItem(\"token\")\r\n                    }\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                });\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        const getPostLikes = async(post) =>{\r\n            let path = `${getApiUrls()}/service/authors/`+ post.author.id+\"/posts/\"+post.id+\"/likes\"\r\n            let postLikes = await axios.get(path, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \"+localStorage.getItem(\"token\")\r\n                }\r\n             });\r\n        \r\n             return postLikes.data.items.length\r\n\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    const [openPost, setopenPost] = React.useState(false);\r\n    const [post, setPost] = React.useState([{}]);\r\n    const [openComments, setOpenComments] = React.useState(false);\r\n    const [selectedFriends, setSelectedFriends] = React.useState();\r\n    const [repostModal, setRepostModal] = React.useState(false);\r\n    return (\r\n        <Box>\r\n            <Box className=\"App\" style={{ display: \"flex\", flexDirection: \"row\", height: \"100vh\", width: \"100vw\", alignItems: \"left\", justifyContent: \"left\" }}>\r\n                <Box style={{ width: \"170px\" }}>\r\n                    <Nav />\r\n                </Box>\r\n                <Box style={{ display: \"flex\", flexDirection: \"row\", backgroundColor: \"white\", flex: 1, height: \"100vh\" }}>\r\n                    <Box style={{ display: \"flex\", flexDirection: \"row\", flex: 1, margin: \"10px\", borderColor: \"grey\", borderStyle: \"solid\", backgroundColor: \"#c3d3eb\" }}>\r\n                        <Box style={{ display: \"flex\", flexDirection: \"column\", flex: 1, margin: \"10px\" }}>\r\n                            <Typography variant=\"h4\">Following's Public Posts</Typography>\r\n                            <List style={{ flex: 1, overflowY: \"scroll\", maxHeight: \"100%\" }}>\r\n                                {!loadingFollowing && <CircularProgress />}\r\n                                {loadingFollowing && followingPosts.map((post) => (\r\n                                    <ListItem key={post.id} onClick={() => { setopenPost(true); setPost(post) }}>\r\n                                        <Card style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                                            <Box style={{ paddingLeft: 2 }}>\r\n                                                {(post.type === 'post') && (<Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"10px\", marginLeft: \"10px\" }}>\r\n                                                    <img src={(post.author.profileImage != \"no profileImage\" && post.author.profileImage != \"\") ? post.author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt=\"IMG\" style={{ borderRadius: \"50%\" }} width=\"100px\" height=\"100px\" />\r\n                                                    <Box style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\" }}>\r\n                                                        <Typography variant=\"h5\">Title: {post.title}</Typography>\r\n                                                        <Typography variant=\"body2\">Author: {post.author.displayName}</Typography>\r\n                                                        <Typography variant=\"body2\">Published: {post.published.substring(0, 10)}</Typography>\r\n                                                        <Typography variant=\"body2\">Node: {post.author.host}</Typography>\r\n                                                        \r\n                                                    </Box>\r\n                                                </Box>)}\r\n                                            </Box>\r\n                                        </Card>\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Box>\r\n                        <Box style={{ display: \"flex\", flexDirection: \"column\", flex: 1, margin: \"10px\" }}>\r\n                            <Typography variant=\"h4\">Public Posts</Typography>\r\n                            <List style={{ flex: 1, overflowY: \"scroll\", maxHeight: \"100%\" }}>\r\n                                {!loadingPosts && <CircularProgress />}\r\n                                {loadingPosts && Posts.map((post) => (\r\n                                    \r\n                                    <ListItem key={post.id} onClick={() => { setopenPost(true); setPost(post) }}>\r\n                                        <Card style={{ width: \"100%\" }}>\r\n                                            <Box style={{ paddingLeft: 2 }}>\r\n                                                {(post.type === 'post') && (<Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"10px\", marginLeft: \"10px\" }}>\r\n                                                    <img src={(post.author.profileImage != \"no profileImage\" && post.author.profileImage != \"\") ? post.author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt=\"IMG\" style={{ borderRadius: \"50%\" }} width=\"100px\" height=\"100px\" />\r\n                                                    <Box style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\" }}>\r\n                                                        <Typography variant=\"h5\">Title: {post.title}</Typography>\r\n                                                        <Typography variant=\"body2\">Author: {post.author.displayName}</Typography>\r\n                                                        <Typography variant=\"body2\">Published: {post.published.substring(0, 10)}</Typography>\r\n                                                        <Typography variant=\"body2\">Node: {post.author.host}</Typography>\r\n                                                        <Typography id ={post.id} variant=\"body2\">Likes: </Typography>\r\n                                                    </Box>\r\n                                                </Box>)}\r\n                                            </Box>\r\n                                        </Card>\r\n                                    </ListItem>\r\n                                ))}\r\n\r\n                            </List>\r\n                        </Box>\r\n                    </Box>\r\n                    {openPost && (\r\n                        <Box style={{ flex: 1, margin: \"10px\", borderColor: \"grey\", borderStyle: \"solid\", backgroundColor: \"#c3d3eb\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Card style={{ marginRight: \"10px\", marginBottom: \"10px\", marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\", marginTop: \"5px\", flex: 1, overflowY: \"scroll\" }}>\r\n                                <Typography variant=\"h2\">{post.title}</Typography>\r\n                                <Box>\r\n                                    <img src={(post.author.profileImage != \"no profileImage\" && post.author.profileImage != \"\") ? post.author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt=\"IMG\" style={{ borderRadius: \"50%\" }} width=\"100px\" height=\"100px\" />\r\n                                    <Box style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\", alignItems: \"cen\", justifyContent: \"left\" }}>\r\n                                        <Typography variant=\"body2\">Author: {post.author.displayName}</Typography>\r\n                                        <Typography variant=\"body2\">Published: {post.published.substring(0, 10)}</Typography>\r\n                                        <Typography variant=\"body2\">Node: {post.author.host}</Typography>                                     \r\n                                    </Box>\r\n                                </Box>\r\n                                <Typography variant=\"h5\">Description:</Typography>\r\n                                {post.contentType === \"text/markdown\" ? (\r\n                                    <MuiMarkdown>{post.description}</MuiMarkdown>\r\n                                ) : (\r\n                                    <Typography variant=\"body1\" style={{ maxHeight: \"100%\", overflowY: \"auto\" }}>{post.description}</Typography>\r\n                                )}\r\n                                {post.image_data ? (\r\n                                    <Card style={{ marginRight: \"10px\", marginBottom: \"10px\", marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\", marginTop: \"5px\", flex: 1 }}>\r\n                                        <img src={`data:image/png;base64,${post.image_data}`} alt=\"Post Image\" style={{ width: \"100%\" }} />\r\n                                    </Card>\r\n                                ) : null}\r\n                                <div id=\"postedComment\" style={{ display: \"none\", borderRadius: \"25px\", backgroundColor: \"#bce3c0\", width: \"40%\", margin: \"10px\", paddingLeft: \"5%\", marginLeft: \"30%\" }}>\r\n                                    <Typography variant=\"h6\" style={{ textAlign: \"left\", fontSize: 15 }}>\r\n                                        {commentPosted ? \"Your comment has been sent!\" : \"\"}\r\n                                    </Typography>\r\n                                </div>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => openComments ? setOpenComments(false) : setopenPost(false)} style={{ position: \"absolute\", bottom: \"30px\", right: \"30px\" }}>\r\n                                    Close\r\n                                </Button>\r\n                                {!openComments && (\r\n                                    <div>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenComments(true)} style={{ position: \"absolute\", bottom: \"30px\", right: \"120px\"}}>\r\n                                        Comments\r\n                                       </Button> \r\n                                       <Button variant=\"outlined\" title = \"like\"color=\"secondary\" startIcon={<FavoriteIcon />} onClick ={() => likeObject(post)}style={{position: \"absolute\", bottom: \"30px\", right: \"400px\"}}   >  \r\n                                        Like\r\n                                        </Button> \r\n                                    </div>\r\n                                    \r\n                                )}\r\n                                <Button onClick = {() => {setRepostModal(true)}} style={{ position: \"absolute\", bottom: \"30px\", right: openComments ? \"120px\" : \"250px\" }} color='primary' variant='contained'>Repost</Button>\r\n                            </Card>\r\n                            {openComments && (\r\n                                <Card style = {{ marginRight: \"10px\",marginBottom: \"10px\",marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\",marginTop: \"5px\",flex:1, overflowY: \"scroll\"}}>\r\n                                    <TextField id=\"comment\" label=\"Comment...\" variant=\"outlined\" style={{width: \"75%\", margin: \"25px\"}}/>            \r\n                                    <Button variant=\"contained\" color=\"primary\" onClick ={() => postComment(document.getElementById(\"comment\").value,post,`${post.author.id}`)}   style={{ margin: 10,position:\"relative\",top:\"25px\"}}>Comment</Button>\r\n                                    {(`${post.author.id}`=== localStorage.getItem(\"id\")) ? <Typography variant=\"h6\" style = {{textAlign:\"left\", paddingLeft:30,fontSize:20}}>Comments:</Typography> :<h2></h2> }                                       \r\n                                         {Comments.map((comments) => (\r\n                                            (((`${comments.post.id}` === `${post.id.split(\"/\").pop()}`) && (`${post.visibility}`=== \"PUBLIC\")) ? \r\n                                            ( <div style = {{display:'flex',alignItems:'center',wordWrap:\"break-word\"}}>\r\n                                                <img src= {comments.author.profileImage} alt = \"\" style = {{borderRadius:\"50%\",marginLeft:30,marginRight:15,marginBottom:10}} width={55} height = {55}/>\r\n                                                <Typography variant=\"h6\" style = {{display: \"inline-block\",textAlign:\"left\", paddingLeft:15,fontSize:20}}>\r\n                                                    {comments.author.displayName}: {comments.comment}\r\n                                                </Typography>\r\n                                               \r\n                                               <IconButton id = \"heartButton\" variant=\"outlined\" color = \"secondary\" aria-label=\"likeComment\" onClick ={() => likeObject(comments)}   style = {{ marginLeft:15}}>\r\n                                                    <FavoriteBorderIcon />\r\n                                                </IconButton>\r\n                                                    \r\n                                               \r\n                                            </div>\r\n                                            )\r\n                                            : (<h2></h2>))\r\n                                            \r\n                                    ))}\r\n\r\n                                 \r\n                                      \r\n                                </Card>\r\n                            )}\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n            </Box>\r\n            <Modal open={repostModal} onClose={() => {setRepostModal(false); setFriend([])}} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                <Box style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", height: \"100vh\" }}>\r\n                    <Card style={{ padding: \"20px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <Typography variant=\"h4\">Repost</Typography>\r\n                        <FormControl style={{ width: \"100%\", margin: \"10px\" }}>\r\n                            <InputLabel htmlFor=\"repostTitle\">friend</InputLabel>\r\n                            <Select id=\"repostTitle\" label=\"friend\" renderValue={(selected) => selected.join(', ')} multiple MenuProps = {{ PaperProps: { style: { maxHeight: 48 * 4.5 + 8, width: 250 } } }} onChange ={handleChange} value={friend}>\r\n                                {friends.map((friendItem) => (\r\n                                    <MenuItem key={friendItem.id} value={friendItem.displayName}>\r\n                                        <Checkbox checked={friend.indexOf(friendItem.displayName) > -1} />\r\n                                        <ListItemText primary={friendItem.displayName} />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleRepost(post)} style={{ margin: 10, position: \"relative\", top: \"25px\" }}>Repost</Button>\r\n                    </Card>\r\n                </Box>\r\n            </Modal>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport { Box, Button, Card, List, ListItem, TextField, Typography, MenuItem, InputLabel, ListItemText  } from '@material-ui/core';\r\nimport Nav from './Nav';\r\nimport axios from 'axios';\r\nimport { getApiUrls } from '../utils/utils';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { TypeSpecimenOutlined } from '@mui/icons-material';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { FormControl, Modal, getTextFieldUtilityClass } from '@mui/material';\r\n\r\n\r\n\r\nfunction Inbox() {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [friends, setFriends] = React.useState([]);\r\n    const [friend, setFriend] = React.useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setFriend(\r\n            // On autofill we get a stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const getFriends = async () => {\r\n        // gets all friends for use in creating posts\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/friends`;\r\n        let response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        let friends = response.data.items;\r\n        setFriends(friends);\r\n    }\r\n\r\n    const handleRepost = async (post) => {\r\n        post.source = `${getApiUrls()}/service/authors/` + localStorage.getItem(\"id\")\r\n        console.log(\"repost\", post)\r\n        console.log(\"sending to\", friend)\r\n        // send to all friend with display name in friend\r\n        for (let i = 0; i < friend.length; i++) {\r\n            // get id of friend in friends with display name = friend[i]\r\n            let id = \"\"\r\n            for (let j = 0; j < friends.length; j++) {\r\n                if (friends[j].displayName == friend[i]) {\r\n                    id = friends[j].id\r\n                    break\r\n                }\r\n            }\r\n            // send post to friend\r\n            let path = `${getApiUrls()}/service/authors/${id}/inbox`;\r\n            let response = await axios.post(path, post, {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                        }\r\n                    });\r\n            console.log(response)\r\n        }\r\n    }\r\n    const get_inbox_items = async () => {\r\n        setLoading(true);\r\n        // get inbox items\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/inbox`;\r\n        let response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        let responseItems = response.data.items;\r\n        console.log(responseItems);\r\n        // get all posts in postsURLs and replace with post object\r\n        for (let i = 0; i < responseItems.length; i++) {\r\n            if (responseItems[i].type === \"postURL\") {\r\n                console.log(responseItems[i].url);\r\n                let path = responseItems[i].url;\r\n                let postResponse = await axios.get(path, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    }\r\n                }).catch((error) => {\r\n                    // skip this post\r\n                    console.log(error);\r\n                });\r\n                // replace postURL with post object\r\n                if (postResponse) {\r\n                    let source = responseItems[i].source;\r\n                    responseItems[i] = postResponse.data;\r\n                    responseItems[i].source = source;\r\n                }\r\n            }\r\n        }\r\n        // check if follow request is already accepted\r\n        for (let i = 0; i < responseItems.length; i++) {\r\n            if (responseItems[i].type === \"follow\") {\r\n                let path = `${getApiUrls()}/service/authors/${responseItems[i].follower.id}/followers/${localStorage.getItem(\"id\")}`;\r\n                let response = await axios.get(path, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    }\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                });\r\n                if (response.data) {\r\n                    // pop this item from the inbox\r\n                    responseItems.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n        // get all source authors data\r\n        for (let i = 0; i < responseItems.length; i++) {\r\n            if (responseItems[i].type === \"post\") {\r\n                if (!responseItems[i].source.includes(responseItems[i].origin)) {\r\n                    let response = await axios.get(responseItems[i].source, {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        }\r\n                    }).catch((error) => {\r\n                        console.log(error);\r\n                    });\r\n                    if (response && response.data) {\r\n                        responseItems[i].source = response.data;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(responseItems);\r\n        setLoading(false);\r\n        return response.data.items\r\n    }\r\n\r\n    const handleClear = async () => {\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/inbox`;\r\n        let response = await axios.delete(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        get_inbox_items().then((data) => {\r\n            setItems(data);\r\n        });\r\n    }\r\n\r\n    const acceptFollow = async (follower) => {\r\n        // add follow back to the follower\r\n        let userId = localStorage.getItem(\"id\");\r\n        let path = `${getApiUrls()}/service/authors/${userId}/followers/${follower.id}`;\r\n        let response = await axios.put(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        // refresh inbox\r\n        setItems( await get_inbox_items());\r\n        return response.data;\r\n    }\r\n\r\n    const [items, setItems] = React.useState([]);\r\n    React.useEffect(() => {\r\n        get_inbox_items().then((data) => {\r\n            setItems(data);\r\n        });\r\n        getFriends();\r\n    }, []);\r\n\r\n    const [comments, setComments] = React.useState([]);\r\n    const [loadingPost, setLoadingPost] = React.useState(false);\r\n\r\n    const handleOpenPost = async (post) => {\r\n        setopenPost(true);\r\n        setLoadingPost(true);\r\n        // get all information on post\r\n        setComments([])\r\n        let path\r\n        let response\r\n        // if https://t20-social-distribution.herokuapp.com is in the origin of the post, then we need to get the post from the local host\r\n        if (post.origin.includes(\"t20-social-distribution.herokuapp.com\")) {\r\n            path = `${getApiUrls()}/service/authors/${post.author.id ? post.author.id : post.author}/posts/${post.id}`;\r\n            console.log(path)\r\n        } else {\r\n            path = post.id\r\n        }\r\n        response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n        post = response.data;\r\n        setPost(post);\r\n\r\n        // get comments on post\r\n\r\n        let id = post.author.id.split(\"/\").pop()\r\n        if (id === localStorage.getItem(\"id\")) {\r\n            path = `${getApiUrls()}/service/authors/${post.author.id}/posts/${post.id}/comments`;\r\n            response = await axios.get(path, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            });\r\n            setComments(response.data.items);\r\n        }\r\n        setLoadingPost(false);\r\n    }\r\n\r\n    const [openPost, setopenPost] = React.useState(false);\r\n    const [post, setPost] = React.useState();\r\n    const [repostModal, setRepostModal] = React.useState(false);\r\n    return (\r\n        <Box>\r\n            <Box className=\"App\" style={{ display: \"flex\", flexDirection: \"row\", height: \"100vh\", width: \"100vw\", alignItems: \"left\", justifyContent: \"left\" }}>\r\n                <Box style={{ width: \"170px\" }}>\r\n                    <Nav />\r\n                </Box>\r\n                <Box style={{ display: \"flex\", flexDirection: \"row\", backgroundColor: \"white\", flex: 1, height: \"100vh\" }}>\r\n                    <Box style={{ display: \"flex\", flexDirection: \"column\", flex: 1, margin: \"10px\", borderColor: \"grey\", borderStyle: \"solid\", borderRadius: \"5px\", backgroundColor: \"#c3d3eb\" }}>\r\n                        <Typography variant=\"h4\">Inbox</Typography>\r\n                        <List style={{ flex: 1, overflowY: \"scroll\", maxHeight: \"100%\" }}>\r\n                            {loading && <CircularProgress />}\r\n                            {!loading && items.map((item) => (\r\n                                <ListItem key={item.id}>\r\n                                    {item.type === \"post\" && (<Card style={{ width: \"100%\" }} onClick={() => { handleOpenPost(item) }}>\r\n                                        <Box style={{ paddingLeft: 2 }}>\r\n                                            {(item.type === 'post') && (<Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"10px\", marginLeft: \"10px\" }}>\r\n                                                <img src={(item.author.profileImage != \"no profileImage\" && item.author.profileImage != \"\") ? item.author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt=\"IMG\" style={{ borderRadius: \"50%\" }} width=\"100px\" height=\"100px\" />\r\n                                                <Box style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\" }}>\r\n                                                    <Typography variant=\"h5\">Title: {item.title}</Typography>\r\n                                                    {(item.source != item.origin) && (item.source != \"No source\") && (item.source != null) && (item.source && item.source.displayName) && (<Typography variant=\"body2\">Sent By: {item.source.displayName}</Typography>)}\r\n                                                    <Typography variant=\"body2\">Author: {item.author.displayName}</Typography>\r\n                                                    <Typography variant=\"body2\">Published: {item.published.substring(0, 10)}</Typography>\r\n                                                    <Typography variant=\"body2\">Node: {item.author.host}</Typography>\r\n                                                    <Typography variant=\"body2\">Likes: {item.likes}</Typography>\r\n                                                    \r\n                                                </Box>\r\n                                            </Box>)}\r\n                                        </Box>\r\n                                    </Card>)}\r\n                                    {item.type === \"comment\" && (<Card style={{ width: \"100%\" }} onClick={() => { handleOpenPost(item.post) }}>\r\n                                        <Box style={{ paddingLeft: 2 }}>\r\n                                            <Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"10px\", marginLeft: \"10px\" }}>\r\n                                                <img src={(item.author.profileImage != \"no profileImage\" && item.author.profileImage != \"\") ? item.author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt=\"IMG\" style={{ borderRadius: \"50%\" }} width=\"100px\" height=\"100px\" />\r\n                                                <Box style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\" }}>\r\n                                                    <Typography variant=\"h5\">Comment: {item.comment}</Typography>\r\n                                                    <Typography variant=\"body2\">Author: {item.author.displayName}</Typography>\r\n                                                    <Typography variant=\"body2\">Published: {item.published.substring(0, 10)}</Typography>\r\n                                                    <Typography variant=\"body2\">Node: {item.author.host}</Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Card>)}\r\n                                    {item.type == \"followRequest\" && (<Card style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }} onClick={() => setopenPost(false)}>\r\n                                        <Box style={{ paddingLeft: 2 }}>\r\n                                            <Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"10px\", marginLeft: \"10px\" }}>\r\n                                                <img src={(item.follower.profileImage != \"no profileImage\" && item.follower.profileImage != \"\") ? item.follower.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt=\"IMG\" style={{ borderRadius: \"50%\" }} width=\"100px\" height=\"100px\" />\r\n                                                <Box style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\" }}>\r\n                                                    <Typography variant=\"h5\">Follow Request</Typography>\r\n                                                    <Typography variant=\"body2\">Author: {item.follower.displayName}</Typography>\r\n                                                    <Typography variant=\"body2\">Node: {item.follower.host}</Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Box>\r\n                                        <Button id={item.follower} style={{ margin: 42, alignSelf: \"flex-end\", backgroundColor: \"lightblue\" }} onClick={() => acceptFollow(item.follower)} variant=\"contained\">\r\n                                            Accept\r\n                                        </Button>\r\n                                    </Card>)}    \r\n                                    {item.type.toLowerCase() === \"like\" && (\r\n                                                <Card style = {{ width: \"100%\"}} onClick={() => { handleOpenPost(item.post) }}> \r\n                                                    <Box style = {{ paddingLeft: 2}}>\r\n                                                        <Box style = {{ display: \"flex\", flexDirection: \"row\", marginTop: \"10px\", marginLeft: \"10px\"}}>\r\n                                                        <img src= {(item.author.profileImage != \"no profileImage\" && item.author.profileImage != \"\") ? item.author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt = \"IMG\" style = {{borderRadius:\"50%\"}} width=\"100px\" height = \"100px\"/>   \r\n                                                        <Box style = {{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\"}} >\r\n                                                            <Typography variant=\"h5\">{item.summary}</Typography>\r\n                                                             {(`${item.objectLiked}`===\"Comment\") ? (<Typography>Comment: \"{item.comment.comment}\"</Typography>): \r\n                                                                <Box>\r\n                                                                    <Typography variant=\"body2\">Author: {item.author.displayName}</Typography>\r\n                                                                    <Typography variant=\"body2\">Node: {item.author.host}</Typography>\r\n                                                                </Box>\r\n                                                                \r\n                                                             }\r\n                                                        </Box>\r\n                                                        </Box>\r\n                                                        \r\n                                                    </Box>\r\n                                                </Card>\r\n                                        )}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => handleClear()} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                            Clear\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => get_inbox_items().then((data) => { setItems(data); })} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                            Refresh\r\n                        </Button>\r\n                    </Box>\r\n                    {openPost && (\r\n                        <Box style={{ flex: 1, margin: \"10px\", borderColor: \"grey\", borderStyle: \"solid\", backgroundColor: \"#c3d3eb\", display: \"flex\", flexDirection: \"column\", overflowY: \"scroll\" }}>\r\n                            {loadingPost && <CircularProgress />}\r\n                            {!loadingPost && <Box style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Card style={{ marginRight: \"10px\", marginBottom: \"10px\", marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\", marginTop: \"5px\", flex: 1 }}>\r\n                                    <Typography variant=\"h2\">{post.title}</Typography>\r\n                                    <Box>\r\n                                        <img src={(post.author.profileImage != \"no profileImage\" && post.author.profileImage != \"\") ? post.author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt=\"IMG\" style={{ borderRadius: \"50%\" }} width=\"100px\" height=\"100px\" />\r\n                                        <Box style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\", alignItems: \"cen\", justifyContent: \"left\" }}>\r\n                                            <Typography variant=\"body2\">Author: {post.author.displayName}</Typography>\r\n                                            <Typography variant=\"body2\">Published: {post.published.substring(0, 10)}</Typography>\r\n                                            <Typography variant=\"body2\">Node: {post.author.host}</Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Typography variant=\"h5\">Description:</Typography>\r\n                                    <Typography variant=\"body2\">{post.description}</Typography>\r\n                                    {post.image_data ? (\r\n                                        <Card style={{ marginRight: \"10px\", marginBottom: \"10px\", marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\", marginTop: \"5px\", flex: 1 }}>\r\n                                            <img src={`data:image/png;base64,${post.image_data}`} alt=\"Post Image\" style={{ width: \"100%\" }} />\r\n                                        </Card>\r\n                                    ) : null}\r\n                                    <div id=\"postedComment\" style={{ display: \"none\", borderRadius: \"25px\", backgroundColor: \"#bce3c0\", width: \"40%\", margin: \"10px\", paddingLeft: \"5%\", marginLeft: \"30%\" }}>\r\n                                    </div>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => setopenPost(false)} style={{ position: \"absolute\", bottom: \"30px\", right: \"30px\" }}>\r\n                                        Close\r\n                                    </Button>\r\n                                    <Button onClick = {() => {setRepostModal(true)}} style={{ position: \"absolute\", bottom: \"30px\", right: \"120px\" }} color='primary' variant='contained'>Repost</Button>\r\n                                </Card>\r\n                                {(comments.length > 0) && <Card style={{ marginRight: \"10px\", marginBottom: \"10px\", marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\", marginTop: \"5px\", flex: 1, overflowY: \"scroll\" }}>\r\n                                    <Typography variant=\"h6\" style={{ textAlign: \"left\", paddingLeft: 30, fontSize: 20 }}>Comments:</Typography>\r\n                                    {comments.map((comments) => (\r\n                                        <div style={{ display: 'flex', alignItems: 'center', wordWrap: \"break-word\" }}>\r\n                                            <img src={comments.author.profileImage} alt=\"\" style={{ borderRadius: \"50%\", marginLeft: 30, marginRight: 15, marginBottom: 10 }} width={55} height={55} />\r\n                                            <Typography variant=\"h6\" style={{ display: \"inline-block\", textAlign: \"left\", paddingLeft: 15, fontSize: 20 }}>\r\n                                                {comments.author.displayName}: {comments.comment}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    ))}\r\n                                </Card>}\r\n                            </Box>}\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n            </Box>\r\n            <Modal open={repostModal} onClose={() => {setRepostModal(false); setFriend([])}} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                <Box style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", height: \"100vh\" }}>\r\n                    <Card style={{ padding: \"20px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <Typography variant=\"h4\">Repost</Typography>\r\n                        <FormControl style={{ width: \"100%\", margin: \"10px\" }}>\r\n                            <InputLabel htmlFor=\"repostTitle\">friend</InputLabel>\r\n                            <Select id=\"repostTitle\" label=\"friend\" renderValue={(selected) => selected.join(', ')} multiple MenuProps = {{ PaperProps: { style: { maxHeight: 48 * 4.5 + 8, width: 250 } } }} onChange ={handleChange} value={friend}>\r\n                                {friends.map((friendItem) => (\r\n                                    <MenuItem key={friendItem.id} value={friendItem.displayName}>\r\n                                        <Checkbox checked={friend.indexOf(friendItem.displayName) > -1} />\r\n                                        <ListItemText primary={friendItem.displayName} />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleRepost(post)} style={{ margin: 10, position: \"relative\", top: \"25px\" }}>Repost</Button>\r\n                    </Card>\r\n                </Box>\r\n            </Modal>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Inbox;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport Nav from './Nav';\r\nimport axios from 'axios';\r\nimport { getApiUrls } from '../utils/utils';\r\n\r\nfunction Profile() {\r\n\r\n    const getUserInfo = async () => {\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}`;\r\n        let response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        console.log(response.data);\r\n        return response.data;\r\n    }\r\n\r\n    const [userInfo, setUserInfo] = React.useState([]);\r\n    React.useEffect(() => {\r\n        getUserInfo().then((data) => {\r\n            setUserInfo(data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            <Nav />\r\n            <Box>\r\n                <h1>Profile</h1>\r\n                <img src= {userInfo.profileImage} alt = \"Profile\" style = {{borderRadius:\"50%\",marginRight:20}} width={55} height = {55}/>\r\n                <h2>Username: {userInfo.displayName}</h2>\r\n                <h2>Display Name: {userInfo.displayName}</h2>\r\n                <h2>Host: {userInfo.host}</h2>\r\n                <h2>GitHub: {userInfo.github}</h2>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport { Box, Button, Card,CardContent, TextField, Typography } from '@material-ui/core';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Nav from './Nav';\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getListSubheaderUtilityClass } from '@mui/material';\r\nimport { getApiUrls } from '../utils/utils';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n/* Load all the ones that are NOT friends\r\ndo a get request to http://127.0.0.1:8000/api/authors/{other}/followers/{user}\r\nis user in that list\r\n - False? => add to list to nonFollow\r\n - Yes => don't add to list of authors */\r\n\r\nfunction Friends() {\r\n\r\n    const [following, setFollowing] = React.useState([]); //people you follow/following\r\n    const [filteredFollowing, setFilteredFollowing] = React.useState([])\r\n    const [friends, setFriends] =  React.useState([]); //people you follow/following\r\n    const [filteredFriends, setFilteredFriends] = React.useState([])\r\n    const [notFollowing, setNotFollowing] = React.useState([]); //people you don't follow\r\n    const [filteredNotFollowing, setFilteredNotFollowing] = React.useState([])\r\n    const [otherUsers, setOtherUsers] = React.useState([]); //all other users\r\n    const [filteredOtherUsers, setFilteredOtherUsers] = React.useState([])\r\n    const [loadingFollowing, setLoadingFollowing] = React.useState(true);\r\n    const [loadingFriends, setLoadingFriends] = React.useState(true);\r\n    const [loadingNotFollowing, setLoadingNotFollowing] = React.useState(true);\r\n    const [loadingOtherUsers, setLoadingOtherUsers] = React.useState(true);\r\n    const [requested, setRequested] = React.useState([]);\r\n    \r\n    \r\n    \r\n    const getLists = async () => {\r\n        // getting local friends\r\n        let userId= userInfo().user_id;\r\n        let path = `${getApiUrls()}/service/authors/${userId}/friends`;\r\n        let friendsResponse = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        let friendsList = friendsResponse.data.items;\r\n\r\n        // getting following\r\n        path =  `${getApiUrls()}/service/authors/${userId}/following`;\r\n        let followingResponse = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n\r\n        // get all other users\r\n        userId= userInfo().user_id;\r\n        let allAuthors = await axios.get(`${getApiUrls()}/service/authors`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        let allAuthorsList = allAuthors.data.items;\r\n        let notFollowingList = []\r\n        // get all other users that are not friends or following\r\n        for (let i = 0; i < allAuthorsList.length; i++) {\r\n            let author = allAuthorsList[i];\r\n            let j = 0;\r\n            let found = false;\r\n            // check if author is in friends list\r\n            for (j = 0; j < followingResponse.data.items.length; j++) {\r\n                if (author.id === followingResponse.data.items[j].id) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            // check if author is in following list\r\n            for (j = 0; j < friendsList.length; j++) {\r\n                if (author.id === friendsList[j].id) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            // add to not following list if not in friends or following\r\n            if (!found && author.id !== userId) {\r\n                notFollowingList.push(author);\r\n            }\r\n        }\r\n        setNotFollowing(notFollowingList);\r\n        setFilteredNotFollowing(notFollowingList);\r\n        setLoadingNotFollowing(false);\r\n        // remove friends from following and self\r\n        let followingList = followingResponse.data.items;\r\n        for (let i = 0; i < friendsList.length; i++) {\r\n            let friend = friendsList[i];\r\n            let j = 0;\r\n            let found = false;\r\n            for (j = 0; j < followingList.length; j++) {\r\n                if (friend.id === followingList[j].id || followingList[j].id === userId) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                followingList.splice(j, 1);\r\n            }\r\n        }\r\n\r\n        // add other server users to friends list and remove them from following list\r\n        for (let i = 0; i < followingList.length; i++) {\r\n            if (followingList[i].host === `${getApiUrls()}`) {\r\n                let path = `${getApiUrls()}/service/authors/${userId}/followers/${followingList[i].id}`;\r\n                let headers = {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n                if ((await axios.get(path, headers).data)) {\r\n                    let friend = followingList[i];\r\n                    // add to friends\r\n                    friendsList.push(friend);\r\n                    // remove from following\r\n                    followingList.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        setFriends(friendsList);\r\n        setFollowing(followingList);\r\n        setFilteredFriends(friendsList);\r\n        setLoadingFriends(false);\r\n        setFilteredFollowing(followingList);\r\n        setLoadingFollowing(false);\r\n        getOtherUsers()\r\n        //console.log(\"friends\", friendsList)\r\n        //console.log(\"following\", followingList)\r\n        //console.log(\"not following\", notFollowingList)\r\n    }\r\n\r\n    const getDuplicateUsers = async () => {\r\n        // get users from duplicate server\r\n        let usersResponse = await axios.get(`${getApiUrls()}/service/authors`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        // add userResponse.data to group20List\r\n        //console.log(\"duplicate\", usersResponse)\r\n        return usersResponse.data.items;\r\n    }\r\n\r\n    const getGroup2Users = async () => {\r\n        // get users from group20\r\n        let username = \"Group20\"\r\n        let password = \"jn8VWYcZDrLrkQDcVsRi\"\r\n        let auth = \"Basic \" + btoa(username + \":\" + password);\r\n        let response = await axios.get(\"https://social-distribution-media.herokuapp.com/api/authors\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": auth,\r\n            }\r\n        }).catch(() => {\r\n            return [];\r\n        });\r\n        // add userResponse.data to group20List\r\n        if (response.data && response.data.items) {\r\n            //console.log(\"Group2 Users\", response.data.items)\r\n            return response.data.items;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const getGroup6Users = async () => {\r\n        // get users from group6\r\n        let auth = \"Basic R3JvdXAyMDpncm91cDIwY21wdXQ0MDQ=\"\r\n        let response = await axios.get(\"https://cmput404-group6-instatonne.herokuapp.com/authors\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": auth,\r\n            }\r\n        }).catch(() => {\r\n            return [];\r\n        });\r\n        if (response.data && response.data.items) {\r\n            //console.log(\"Group6 Users\", response.data.items)\r\n            return response.data.items;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const getGroup13Users = async () => {\r\n        // get users from group13\r\n        let username = \"Group13\"\r\n        let password = \"\"\r\n        let auth = \"Basic \" + btoa(username + \":\" + password);\r\n        let response = await axios.get(\"https://group-13-epic-app.herokuapp.com/api/authors\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }).catch(() => {\r\n            return [];\r\n        });\r\n        if (response.data && response.data.items) {\r\n            //console.log(\"Group13 Users\", response.data.items)\r\n            return response.data.items;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const getGroup18Users = async () => {\r\n        // get users from group18\r\n        let response = await axios.get(\"https://distributed-social-net.herokuapp.com/service/authors\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }).catch(() => {\r\n            return [];\r\n        });\r\n        if (response.data && response.data.items) {\r\n            //console.log(\"Group18 Users\", response.data.items)\r\n            return response.data.items;\r\n        }\r\n        return [];\r\n    }\r\n\r\n\r\n\r\n    const getOtherUsers = async () => {\r\n        let otherUsersList = [];\r\n\r\n        let group2Users = await getGroup2Users();\r\n        otherUsersList = otherUsersList.concat(group2Users);\r\n        //let duplicateUsers = await getDuplicateUsers();\r\n        //otherUsersList = otherUsersList.concat(duplicateUsers);\r\n        let group6Users = await getGroup6Users();\r\n        otherUsersList = otherUsersList.concat(group6Users);\r\n        let group13Users = await getGroup13Users();\r\n        otherUsersList = otherUsersList.concat(group13Users);\r\n        //let group18Users = await getGroup18Users();\r\n        //otherUsersList = otherUsersList.concat(group18Users);\r\n        \r\n\r\n        // remove friends from other users\r\n        for (let i = 0; i < friends.length; i++) {\r\n            let friend = friends[i];\r\n            let j = 0;\r\n            let found = false;\r\n            for (j = 0; j < otherUsersList.length; j++) {\r\n                if (friend.id === otherUsersList[j].id) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                otherUsersList.splice(j, 1);\r\n            }\r\n        }\r\n        // get following\r\n        let userId= userInfo().user_id;\r\n        let path =  `${getApiUrls()}/service/authors/${userId}/following`;\r\n        let followingResponse = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        // remove following from other users\r\n        for (let i = 0; i < followingResponse.data.items.length; i++) {\r\n            let following = followingResponse.data.items[i];\r\n            let j = 0;\r\n            let found = false;\r\n            // remove host from id if it exists\r\n            if (following.id.includes(\"/\")) {\r\n                following.id = following.id.split(\"/\").pop();\r\n            }\r\n            for (j = 0; j < otherUsersList.length; j++) {\r\n                // remove host from id if it exists\r\n                if (otherUsersList[j].id.includes(\"/\")) {\r\n                    otherUsersList[j].id = otherUsersList[j].id.split(\"/\").pop();\r\n                }\r\n                if (following.id === otherUsersList[j].id || following.id.replace(/-/g,'') === otherUsersList[j].id.replace(/-/g,'')) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                otherUsersList.splice(j, 1);\r\n            }\r\n        }\r\n        //console.log(\"other users\", otherUsersList)\r\n        setOtherUsers(otherUsersList);\r\n        setFilteredOtherUsers(otherUsersList);\r\n        setLoadingOtherUsers(false);\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        getLists()\r\n        getOtherUsers()\r\n    }, []);\r\n\r\n    const followAuthor = async (other) => {\r\n        // handles follow button\r\n        let userId= userInfo().user_id;\r\n        // remove host from id\r\n        let id = other.id \r\n        let path\r\n        id = id.split(\"/\").pop();\r\n        if (other.host === \"https://distributed-social-net.herokuapp.com/\") id = id.replace(/-/g,'');\r\n        // send follow request to server\r\n        // sending follow for other servers\r\n        // get follower info\r\n        let userResponse = await axios.get(`${getApiUrls()}/service/authors/${userId}`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n        let userData = userResponse.data;\r\n        // add follow request to inbox of other\r\n        path = `${getApiUrls()}/service/authors/${id}/inbox`;\r\n        if (other.host == \"https://social-distribution-media.herokuapp.com/api\"){\r\n            path = other.host+\"/authors/\"+id+\"/inbox\";\r\n        }\r\n        if (other.host == \"https://group-13-epic-app.herokuapp.com/\"){\r\n            path = other.host+\"api/authors/\"+id+\"/inbox/\";\r\n        }\r\n        if (other.host == \"https://cmput404-group6-instatonne.herokuapp.com\"){\r\n            id = id.replace(/-/g,'');\r\n            path = other.host+\"/authors/\"+id+\"/inbox\";\r\n        }\r\n        if (other.host == \"https://distributed-social-net.herokuapp.com/\"){\r\n            id = id.replace(/-/g,'');\r\n            path = other.host+\"service/authors/\"+id+\"/inbox\";\r\n        }\r\n        let username = \"Group20\"\r\n        let password = \"jn8VWYcZDrLrkQDcVsRi\"\r\n        let authG6 = \"Basic \" + btoa(username + \":\" + password);\r\n        other.id = other.url\r\n        userData.id = userData.url\r\n        let data = {\r\n            \"type\": \"Follow\",\r\n            \"summary\": \"New follower\",\r\n            \"actor\": userData,\r\n            \"object\": other\r\n        }\r\n        console.log('follow inbox data',data, path)\r\n        await axios.post(path, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\" : (other.host == path) ? \"Bearer \" + localStorage.getItem(\"token\") : (other.host == \"https://social-distribution-media.herokuapp.com/api\") ? authG6 : (other.host == \"https://cmput404-group6-instatonne.herokuapp.com\") ? \"Basic R3JvdXAyMDpncm91cDIwY21wdXQ0MDQ=\" : \"\"\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n        \r\n        // remove item from other users or not following list and add to following list\r\n        setFilteredNotFollowing(filteredNotFollowing.filter((item) => item.id !== other.id));\r\n        setFilteredOtherUsers(filteredOtherUsers.filter((item) => item.id !== other.id));\r\n        // setFilteredFollowing(filteredFollowing.concat(other)); other user has to accept follow request\r\n    }\r\n    \r\n    const unfollowAuthor = async (other) => {\r\n        // handles unfollow button\r\n        let userId= userInfo().user_id;\r\n        let path =  `${getApiUrls()}/service/authors/${other.id}/followers/${userId}`;\r\n        let response = await axios.delete(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        getLists()\r\n        return response.data;\r\n    }\r\n    \r\n    //Ensures that we are logged in \r\n    let token =\"Bearer \" + localStorage.getItem(\"token\");\r\n    const navigate = useNavigate();\r\n    const userInfo = () =>{\r\n        if (token === null ){\r\n            navigate(\"/Login\");\r\n        }\r\n        var decoded = JSON.stringify(jwt_decode(token));\r\n       \r\n        var decode_info= JSON.parse(decoded)\r\n        //console.log(decode_info)\r\n        return decode_info;\r\n        \r\n    };\r\n    \r\n\r\n    const searchOtherUsers = () => {\r\n        let search = document.getElementById(\"searchOther\").value;\r\n        // check if search is in display name or host\r\n        let filtered = otherUsers.filter((author) => {\r\n            return author.displayName.toLowerCase().includes(search.toLowerCase()) || author.host.toLowerCase().includes(search.toLowerCase());\r\n        });\r\n        setFilteredOtherUsers(filtered);\r\n    }\r\n\r\n    const searchFriends = () => {\r\n        let search = document.getElementById(\"searchFriends\").value;\r\n        // check if search is in display name or host\r\n        let filtered = friends.filter((author) => {\r\n            return author.displayName.toLowerCase().includes(search.toLowerCase()) || author.host.toLowerCase().includes(search.toLowerCase());\r\n        });\r\n        setFilteredFriends(filtered);\r\n    }\r\n\r\n    const searchNotFollowing = () => {\r\n        let search = document.getElementById(\"searchNotFollowing\").value;\r\n        // check if search is in display name or host\r\n        let filtered = notFollowing.filter((author) => {\r\n            return author.displayName.toLowerCase().includes(search.toLowerCase()) || author.host.toLowerCase().includes(search.toLowerCase());\r\n        });\r\n        setFilteredNotFollowing(filtered);\r\n    }\r\n\r\n    const searchFollowing = () => {\r\n        let search = document.getElementById(\"searchFollowing\").value;\r\n        // check if search is in display name or host\r\n        let filtered = following.filter((author) => {\r\n            return author.displayName.toLowerCase().includes(search.toLowerCase()) || author.host.toLowerCase().includes(search.toLowerCase());\r\n        });\r\n        setFilteredFollowing(filtered);\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Nav/>\r\n            <Box style = {{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'row', marginLeft:200, marginTop:40}}>\r\n                <Box style = {{flex:1,display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Card style = {{width:500, height:450, backgroundColor:\"#c3d3eb\", borderColor: \"grey\", borderStyle: \"solid\"}}>\r\n                        <Box style = {{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'row'}}>\r\n                            <Typography variant=\"h5\" style = {{paddingTop:5, alignSelf:'left'}}>True Friends</Typography>\r\n                            <TextField id=\"searchFriends\" label=\"Search by name and host\" style = {{width: 370, marginLeft: 20}} onChange={searchFriends}/>\r\n                        </Box>\r\n                        <Box style = {{marginLeft:20,marginTop:20, height:385,overflowY:\"scroll\", overflowX:\"hidden\"}}>\r\n                            {loadingFriends && <CircularProgress />}\r\n                            {!loadingFriends && filteredFriends.map((author) => (\r\n                                <CardContent >\r\n                                    <div style = {{display:'flex',alignItems:'center',width:500,wordWrap:\"break-word\"}}>\r\n                                        <img src= {(author.profileImage != \"no profileImage\" && author.profileImage != \"\") ? author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt = \"IMG\" style = {{borderRadius:\"50%\"}} width={55} height = {55}/>\r\n                                        <span>\r\n                                            <a href = \" \"><h4 style ={{width:150,wordWrap:\"break-word\"}}>{author.displayName}</h4></a>\r\n                                        </span>\r\n                                        <Button\r\n                                            style={{backgroundColor:\"pink\",float:\"right\",\r\n                                            marginLeft:25, fontSize:15,minWidth:90}}\r\n                                            onClick={() => unfollowAuthor(author) } >\r\n                                            Unfriend\r\n                                        </Button>\r\n                                    </div>\r\n                                </CardContent>\r\n                            ))}\r\n                        </Box>\r\n                    </Card>\r\n                    <Card style = {{width:500, height:450, backgroundColor:\"#c3d3eb\", marginTop:20, borderColor: \"grey\", borderStyle: \"solid\"}}>\r\n                        <Box style = {{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'row'}}>\r\n                            <Typography variant=\"h5\" style = {{paddingTop:5, alignSelf:'left'}}>Following/Friends</Typography>\r\n                            <TextField id=\"searchFollowing\" label=\"Search by name and host\" style = {{width: 350, marginLeft: 20}} onChange={searchFollowing}/>\r\n                        </Box>\r\n                        <Box style = {{marginLeft:20,marginTop:20, height:385,overflowY:\"scroll\", overflowX:\"hidden\"}}>\r\n                            {loadingFollowing && <CircularProgress />}\r\n                            {!loadingFollowing && filteredFollowing.map((author) => (\r\n                                <CardContent >\r\n                                    <div style = {{display:'flex',alignItems:'center',width:400,wordWrap:\"break-word\"}}>\r\n                                        <img src= {(author.profileImage != \"no profileImage\" && author.profileImage != \"\") ? author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt = \"IMG\" style = {{borderRadius:\"50%\"}} width={55} height = {55}/>\r\n                                        <span>\r\n                                            <a href = \" \"><h4 style ={{width:150,wordWrap:\"break-word\"}}>{author.displayName}</h4></a>\r\n                                        </span>\r\n                                        <Button \r\n                                            style={{backgroundColor:\"pink\",float:\"right\",\r\n                                            marginLeft:25, fontSize:15,minWidth:90}}\r\n                                            onClick={() => unfollowAuthor(author) } >\r\n                                            Unfollow\r\n                                        </Button>\r\n                                    </div>\r\n                                </CardContent>    \r\n                            ))}\r\n                        </Box>\r\n                    </Card>\r\n                </Box>\r\n                <Box style = {{flex:1,display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Card style = {{width:500, height:450, backgroundColor:\"#c3d3eb\", borderColor: \"grey\", borderStyle: \"solid\"}}>\r\n                        <Box style = {{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'row'}}>\r\n                            <Typography variant=\"h5\" style = {{paddingTop:5}}>Local Authors</Typography>\r\n                            <TextField id=\"searchNotFollowing\" label=\"Search by name and host\" style = {{width: 300, marginLeft: 20}} onChange={searchNotFollowing}/>\r\n                        </Box>\r\n                        <Box style = {{marginLeft:20,marginTop:20, height:385,overflowY:\"scroll\", overflowX:\"hidden\"}}>\r\n                            {loadingNotFollowing && <CircularProgress />}\r\n                            {!loadingNotFollowing && filteredNotFollowing.map((author) => (\r\n                                <CardContent >\r\n                                    <div style = {{display:'flex',alignItems:'center',width:400,wordWrap:\"break-word\"}}>\r\n                                        <img src= {(author.profileImage != \"no profileImage\" && author.profileImage != \"\") ? author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt = \"IMG\" style = {{borderRadius:\"50%\"}} width={55} height = {55}/>\r\n                                        <span>\r\n                                            <a href = \" \"><h4 style ={{width:150,wordWrap:\"break-word\"}}> {author.displayName}</h4></a>\r\n                                        </span>\r\n                                        <Button \r\n                                            id = {author.id}\r\n                                            style={{backgroundColor:\"white\",float:\"right\",\r\n                                            marginLeft:25, fontSize:15,minWidth:90}}onClick = {() => followAuthor(author)}>\r\n                                            Follow\r\n                                        </Button>\r\n                                    </div>\r\n\r\n                                </CardContent>    \r\n                            ))}\r\n                        </Box>\r\n                    </Card>\r\n                    <Card style = {{width:500, height:450, backgroundColor:\"#c3d3eb\", marginTop:20, borderColor: \"grey\", borderStyle: \"solid\"}}>\r\n                        <Box style = {{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'row'}}>\r\n                            <Typography variant=\"h5\" style = {{paddingTop:5}}>External Authors</Typography>\r\n                            <TextField id=\"searchOther\" label=\"Search by name and host\" style = {{width: 300,marginLeft:20}} onChange={searchOtherUsers}/>\r\n                        </Box>\r\n                        <Box style = {{marginLeft:20,marginTop:20, height:385,overflowY:\"scroll\", overflowX:\"hidden\"}}>\r\n                            {loadingOtherUsers && <CircularProgress />}\r\n                            {!loadingOtherUsers && filteredOtherUsers.map((author) => (\r\n                                <CardContent >\r\n                                    <div style = {{display:'flex',alignItems:'center',width:500,wordWrap:\"break-word\"}}>\r\n                                        <img src= {(author.profileImage != \"no profileImage\" && author.profileImage != \"\" && author.profileImage != \"none\") ? author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt = \"IMG\" style = {{borderRadius:\"50%\"}} width={55} height = {55}/>\r\n                                        <span>\r\n                                            <a href = \" \"><h4 style ={{width:150,wordWrap:\"break-word\"}}>{author.displayName}</h4></a>\r\n                                        </span>\r\n                                        <Button \r\n                                            style={{backgroundColor:\"white\",float:\"right\",\r\n                                            marginLeft:25, fontSize:15,minWidth:90}}\r\n                                            onClick={() => followAuthor(author) } >\r\n                                            Follow\r\n                                        </Button>\r\n                                    </div>\r\n                                </CardContent>    \r\n                            ))}\r\n                        </Box>\r\n                    </Card>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport { Box, Button, Card, List, ListItem, TextField, Typography, FormControlLabel, Checkbox, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\r\nimport Nav from './Nav';\r\nimport axios from 'axios';\r\nimport { getApiUrls } from '../utils/utils';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport MuiMarkdown from 'mui-markdown';\r\n\r\nfunction Posts() {\r\n    const [Comments, setComments] = React.useState([]);\r\n    const [Friends, setFriends] = React.useState([]);\r\n\r\n    const getFriends = async () => {\r\n        // gets all friends for use in creating posts\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/friends`;\r\n        let response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        let friends = response.data.items;\r\n        setFriends(friends);\r\n    }\r\n\r\n    const getposts = async () => {\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/posts`;\r\n        let response = await axios.get(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        let posts = response.data.items;\r\n        console.log(response.data);\r\n        let commentList = []\r\n\r\n        //get all comments in the \"Public Posts\" header\r\n        if (posts == undefined) posts = [];\r\n        for (let i = 0; i < posts.length; i++) {\r\n\r\n            let commentListPath = `${getApiUrls()}` + \"/service/authors/\" + posts[i].author.id + \"/posts/\" + posts[i].id + \"/comments\";\r\n            let comments = await axios.get(commentListPath, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n            let commentDataList = comments.data.items\r\n\r\n            for (let i = 0; i < commentDataList.length; i++) {\r\n                commentList.push(commentDataList[i])\r\n            }\r\n        }\r\n\r\n\r\n        //getting all comments in the \"Following\" header\r\n        console.log(\"comments: \", commentList)\r\n        setComments(commentList)\r\n        return posts;\r\n    }\r\n    const [Posts, setPosts] = React.useState([]);\r\n    React.useEffect(() => {\r\n        getposts().then((data) => {\r\n            setPosts(data);\r\n            setLoadingPosts(true);\r\n        });\r\n        getFriends();\r\n    }, []);\r\n\r\n    const CreatePost = async (title, description, imageData) => {\r\n        console.log(visibility ? \"FRIENDS\" : \"PUBLIC\")\r\n        console.log(unlisted)\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/posts`;\r\n        let data ={}\r\n        \r\n        if (markdown) {\r\n            console.log(markdown)\r\n            data = {\r\n            title: title,\r\n            description: description,\r\n            unlisted: unlisted,\r\n            visibility: visibility ? \"FRIENDS\" : \"PUBLIC\",\r\n            contentType: 'text/markdown',\r\n            image_data: imageData,\r\n            }\r\n\r\n        }\r\n        else{\r\n            data = {\r\n            title: title,\r\n            description: description,\r\n            unlisted: unlisted,\r\n            visibility: visibility ? \"FRIENDS\" : \"PUBLIC\",\r\n            contentType: 'text/plain',\r\n            image_data: imageData,\r\n            }\r\n        }\r\n        let token = \"Bearer \" + localStorage.getItem(\"token\");\r\n        console.log(token);\r\n        let postResponse = await axios.post(path, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        });\r\n        console.log(postResponse.data);\r\n        // if post is not unlisted send to followers/friends\r\n\r\n        if (!unlisted) {\r\n            // if visility is set to friends and a friend is selected, send post to friend\r\n            if (visibility && friend) {\r\n                path = `${getApiUrls()}/service/authors/${friend}/inbox`;\r\n                await axios.post(path, postResponse.data, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token\r\n                    }\r\n                });\r\n            } else {\r\n                // get followers\r\n                path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/followers`;\r\n                let followersResponse = await axios.get(path, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token\r\n                    }\r\n                });\r\n                console.log(followersResponse.data);\r\n\r\n                // send post to inbox of followers\r\n                for (let follower of followersResponse.data.items) {\r\n                    path = `${getApiUrls()}/service/authors/${follower.id}/inbox`;\r\n                    await axios.post(path, postResponse.data, {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Authorization\": token\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        setcreatePost(false);\r\n        getposts().then((data) => {\r\n            setPosts(data);\r\n        }\r\n        );\r\n        setFriend(\"\");\r\n    }\r\n\r\n    const HandleDelete = async () => {\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/posts/${post.id}`;\r\n        let response = await axios.delete(path, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        setopenPost(false);\r\n        getposts().then((data) => {\r\n            setPosts(data);\r\n        }\r\n        );\r\n    }\r\n\r\n    const handleEditPost = async () => {\r\n        let path = `${getApiUrls()}/service/authors/${localStorage.getItem(\"id\")}/posts/${post.id}`;\r\n        let data = {\r\n            title: post.title,\r\n            description: post.description,\r\n        }\r\n        await axios.put(path, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        setedit(false);\r\n        getposts().then((data) => {\r\n            setPosts(data);\r\n        }\r\n        );\r\n    }\r\n\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const base64 = event.target.result.split(\",\")[1];\r\n            setImage(base64);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n\r\n    const [imageData, setImage] = React.useState(null);\r\n    const [createPost, setcreatePost] = React.useState(false);\r\n    const [openPost, setopenPost] = React.useState(false);\r\n    const [edit, setedit] = React.useState(false);\r\n    const [post, setPost] = React.useState([{}]);\r\n    const [unlisted, setUnlisted] = React.useState(false);\r\n    const [visibility, setVisibility] = React.useState(false);\r\n    const [loadingPosts, setLoadingPosts] = React.useState(false);\r\n    const [friend, setFriend] = React.useState();\r\n    const [markdown, setMarkdown] = React.useState(false);\r\n    return (\r\n        <Box>\r\n            <Box className=\"App\" style={{ display: \"flex\", flexDirection: \"row\", height: \"100vh\", width: \"100vw\", alignItems: \"left\", justifyContent: \"left\" }}>\r\n                <Box style={{ width: \"170px\" }}>\r\n                    <Nav />\r\n                </Box>\r\n                <Box style={{ display: \"flex\", flexDirection: \"row\", backgroundColor: \"white\", flex: 1, height: \"100vh\" }}>\r\n                    <Box style={{ display: \"flex\", flexDirection: \"column\", flex: 1, margin: \"10px\", borderColor: \"grey\", borderStyle: \"solid\", backgroundColor: \"#c3d3eb\" }}>\r\n                        <Typography variant=\"h4\">Posts</Typography>\r\n                        <List style={{ flex: 1, overflowY: \"scroll\", maxHeight: \"100%\" }}>\r\n                            {!loadingPosts && <CircularProgress />}\r\n                            {loadingPosts && Posts.map((post) => (\r\n                                <ListItem key={post.id} onClick={() => { setopenPost(true); setPost(post) }}>\r\n                                    <Card style={{ width: \"100%\" }}>\r\n                                        <Box style={{ paddingLeft: 2 }}>\r\n                                            {(post.type === 'post') && (<Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"10px\", marginLeft: \"10px\" }}>\r\n                                                <img src={(post.author.profileImage != \"no profileImage\" && post.author.profileImage != \"\") ? post.author.profileImage : \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\"} alt=\"IMG\" style={{ borderRadius: \"50%\" }} width=\"100px\" height=\"100px\" />\r\n                                                <Box style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"10px\" }}>\r\n                                                    <Typography variant=\"h5\">Title: {post.title}</Typography>\r\n                                                    <Typography variant=\"body2\">Author: {post.author.displayName}</Typography>\r\n                                                    <Typography variant=\"body2\">Published: {post.published.substring(0, 10)}</Typography>\r\n                                                    <Typography variant=\"body2\">Node: {post.author.host}</Typography>\r\n                                                </Box>\r\n                                            </Box>)}\r\n                                        </Box>\r\n                                    </Card>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        {!createPost &&\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => setcreatePost(true)} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                                Create Post\r\n                            </Button>\r\n                        }\r\n                    </Box>\r\n                    {openPost && (\r\n                        <Box style={{ flex: 1, display: \"flex\", flexDirection: \"column\", margin: \"10px\", borderColor: \"grey\", borderStyle: \"solid\", backgroundColor: \"#c3d3eb\", overflowY: \"scroll\" }}>\r\n                            {edit ? (\r\n                                <TextField id=\"title\" label=\"Title\" variant=\"outlined\" style={{ width: \"95%\", margin: \"25px\" }} value={post.title} onChange={(e) => setPost({ ...post, title: e.target.value })} />\r\n                            ) : (\r\n                                <Typography variant=\"h4\">{post.title}</Typography>\r\n                            )}\r\n                            <Card style={{ marginRight: \"10px\", marginBottom: \"10px\", marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\", marginTop: \"5px\", flex: 1, overflowY: \"scroll\" }}>\r\n                                <Card style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\", boxShadow: \"0 0 10px 0 rgba(0,0,0,0.5)\" }}>\r\n                                    {edit ? (\r\n                                        <TextField id=\"description\" label=\"Description\" variant=\"outlined\" style={{ width: \"95%\", margin: \"25px\" }} value={post.description} onChange={(e) => setPost({ ...post, description: e.target.value })} multiline maxRows={15} />\r\n                                    ) : (\r\n\r\n                                        post.contentType === \"text/markdown\" && markdown? (\r\n                                                <MuiMarkdown>{post.description}</MuiMarkdown>\r\n                                            ) : (\r\n                                                <Typography variant=\"body1\" style={{ maxHeight: \"100%\", overflowY: \"auto\" }}>{post.description}</Typography>\r\n                                            )\r\n                                        \r\n                                    )}\r\n\r\n                                </Card>\r\n                            </Card>\r\n\r\n                            {post.image_data ? (\r\n                                <Card style={{ marginRight: \"10px\", marginBottom: \"10px\", marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\", marginTop: \"5px\", flex: 1, overflowY: \"scroll\" }}>\r\n                                    <img src={`data:image/png;base64,${post.image_data}`} alt=\"Post Image\" style={{ width: \"100%\" }} />\r\n                                </Card>\r\n                            ) : null}\r\n\r\n                            <Box style={{ alignSelf: \"flex-end\" }}>\r\n                                {edit && (\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => HandleDelete()} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                                        Delete\r\n                                    </Button>\r\n                                )}\r\n                                {!edit ? (\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => setedit(true)} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                                        Edit\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleEditPost()} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                                        Finish\r\n                                    </Button>\r\n                                )}\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => setopenPost(false)} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                                    Close\r\n                                </Button>\r\n                            </Box>\r\n                            <Card style={{ marginRight: \"10px\", marginBottom: \"10px\", marginLeft: \"10px\", borderRadius: \"10px\", borderColor: \"black\", marginTop: \"5px\", flex: 1, overflowY: \"scroll\" }}>\r\n                                {(`${post.author.id}` === localStorage.getItem(\"id\")) ? <Typography variant=\"h6\" style={{ textAlign: \"left\", paddingLeft: 30, fontSize: 20 }}>Comments:</Typography> : <h2></h2>}                                        {Comments.map((comments) => (\r\n                                    ((`${comments.post.id}` === `${post.id.split(\"/\").pop()}`) && (`${post.author.id}` === localStorage.getItem(\"id\"))) ?\r\n                                        (<div style={{ display: 'flex', alignItems: 'center', wordWrap: \"break-word\" }}>\r\n                                            <img src={comments.author.profileImage} alt=\"\" style={{ borderRadius: \"50%\", marginLeft: 30, marginRight: 15, marginBottom: 10 }} width={55} height={55} />\r\n                                            <Typography variant=\"h6\" style={{ display: \"inline-block\", textAlign: \"left\", paddingLeft: 15, fontSize: 20 }}>\r\n                                                {comments.author.displayName}: {comments.comment}\r\n                                            </Typography>\r\n                                        </div>\r\n                                        )\r\n                                        : (<h2></h2>)\r\n                                ))}\r\n                            </Card>\r\n                        </Box>)\r\n                    }\r\n                    {createPost && (\r\n                        <Box style={{ display: \"flex\", flexDirection: \"column\", margin: \"10px\", borderColor: \"grey\", borderStyle: \"solid\", width: \"25%\", backgroundColor: \"#c3d3eb\" }}>\r\n                            <Typography variant=\"h4\">Create Post</Typography>\r\n                            <Box style={{ display: \"flex\", flexDirection: \"column\", flex: 1, margin: \"10px\", alignItems: \"center\", backgroundColor: \"white\", borderRadius: \"5px\" }}>\r\n                                <TextField id=\"title\" label=\"Title\" variant=\"outlined\" style={{ width: \"95%\", margin: \"25px\" }} />\r\n                                <TextField id=\"description\" label=\"Description\" variant=\"outlined\" style={{ width: \"95%\", margin: \"25px\" }} multiline minRows={15} />\r\n                                <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n                                <FormControlLabel control={<Checkbox id=\"unlisted\" name=\"unlisted\" />} onChange={() => setUnlisted(!unlisted)} label=\"Unlisted\" />\r\n                                <FormControlLabel control={<Checkbox id=\"visibility\" name=\"visibility\" onChange={() => setVisibility(!visibility)} />} label=\"Friends Only\" />\r\n                                <FormControlLabel control={<Checkbox id=\"markdown\" name=\"markdown\" onChange={() => setMarkdown(!markdown)} />} label=\"Use Markdown\" />\r\n                                \r\n                                {visibility && <Select id = \"select\" label = \"Friend\" value={friend} onChange={(e) => setFriend(e.target.value)} style={{ width: \"95%\", margin: \"25px\" }}>\r\n                                    {Friends.map((friend) => (\r\n                                        <MenuItem value={friend.id}>{friend.displayName}</MenuItem>\r\n                                    ))}\r\n                                </Select>}\r\n                            </Box>\r\n                            <Box style={{ alignSelf: \"flex-end\" }}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => CreatePost(document.getElementById(\"title\").value, document.getElementById(\"description\").value, imageData)} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                                    Create\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => setcreatePost(false)} style={{ margin: 10, alignSelf: \"flex-end\" }}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Box>\r\n\r\n                        </Box>)\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default Posts;","import { Box, Button, Card, TextField, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getApiUrls } from '../utils/utils';\r\n\r\n\r\nfunction Login() {\r\n    const navigate = useNavigate();\r\n\r\n    const [invalid, setInvalid] = React.useState(false);\r\n\r\n    const handleLogin = () => {\r\n        let username = document.getElementById(\"username\").value;\r\n        let password = document.getElementById(\"password\").value;\r\n        let path = getApiUrls()\r\n        console.log(path)\r\n        axios.post(path + \"/login\", {\r\n            username: username,\r\n            password: password\r\n        }   \r\n        ).then((response) => {\r\n            if (response.status === 200) {\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                localStorage.setItem(\"id\", response.data.id);\r\n                navigate(\"/\");\r\n            }\r\n        }).catch((error) => {\r\n            setInvalid(true);\r\n            console.log(error);\r\n        }\r\n        )\r\n        \r\n    }\r\n\r\n    return (\r\n        <Box sx={{height: \"100vh\",width: \"100%\",display: \"flex\",flexDirection: \"column\",justifyContent: \"center\",alignItems: \"center\",}}>\r\n            <Box sx={{flex: 1,width: \"100%\",display: \"flex\",flexDirection: \"column\",justifyContent: \"center\",}}>\r\n            </Box>\r\n                <Box sx={{flex: 5,width: \"100%\",backgroundColor: \"lightgrey\",alignItems: \"center\",display: \"flex\",justifyContent: \"center\",}}>\r\n                    <Box sx={{zIndex: 1,height: \"400px\",width: \"400px\",display: \"flex\",justifyContent: \"right\",alignItems: \"center\",}}>\r\n                        <Card sx={{height: \"500px\",width: \"500px\",display: \"flex\",flexDirection: \"column\",justifyContent: \"center\",alignItems: \"center\",backgroundColor: \"white\",}}>\r\n                            <Box sx={{flex: 2,display: \"flex\",flexDirection: \"column\",justifyContent: \"center\",alignItems: \"center\",}}>\r\n                                <Typography variant=\"h4\" sx={{ fontWeight: \"bold\", color: \"black\" }}>\r\n                                    Login\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box sx={{flex: 2,display: \"flex\",flexDirection: \"column\",justifyContent: \"center\",alignItems: \"center\",marginBottom: \"25%\", }}>\r\n                                <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: \"red\" }}>\r\n                                    {invalid ? \"Invalid Username or Password\" : \"\"}\r\n                                </Typography>\r\n                                <TextField sx={{width: \"300px\",}} id=\"username\" label=\"Username\" variant=\"outlined\" onChange={() => setInvalid(false)} onKeyPress={(e) => {if (e.key === 'Enter') {handleLogin()}}}/>\r\n                                <TextField sx={{width: \"300px\",}} id=\"password\" label=\"Password\" variant=\"outlined\" onChange={() => setInvalid(false)} type='password' onKeyPress={(e) => {if (e.key === 'Enter') {handleLogin()}}}/>\r\n                            </Box>\r\n                            <Box sx={{flex: 1,display: \"flex\",flexDirection: \"column\",justifyContent: \"center\",alignItems: \"center\",}}>\r\n                                <Button sx={{width: \"200px\", height: \"50px\"}} variant=\"contained\" color=\"primary\" onClick= {() => handleLogin()}>\r\n                                    Login\r\n                                </Button>\r\n                            </Box>\r\n                        </Card>\r\n                    </Box>\r\n                </Box>\r\n            <Box sx={{flex: 1,width: \"100%\",display: \"flex\",flexDirection: \"column\",justifyContent: \"center\",alignItems: \"center\",}}>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Login;","import './App.css';\nimport { Box } from '@material-ui/core';\nimport Home from './Components/Home';\nimport Inbox from './Components/Inbox';\nimport Profile from './Components/Profile';\nimport Friends from './Components/Friends';\nimport Posts from './Components/Posts';\nimport Login from './Components/Login';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Box className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/Inbox\" element={<Inbox />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/friends\" element={<Friends />} />\n          <Route path=\"/posts\" element={<Posts />} />\n        </Routes>\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}